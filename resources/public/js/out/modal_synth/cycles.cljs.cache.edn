{:rename-macros {}, :renames {}, :use-macros {sel1 dommy.core, go cljs.core.async.macros, alt! cljs.core.async.macros}, :excludes #{}, :name modal-synth.cycles, :imports nil, :requires {goog.dom goog.dom, webaudio modal-synth.webaudio, keyboard-control modal-synth.keyboard-control, dom goog.dom, spectro-vis modal-synth.spectro-vis, channel-dom modal-synth.channel-dom, modal-synth.webaudio modal-synth.webaudio, dommy dommy.core, modal-synth.utils modal-synth.utils, cljs.core.async cljs.core.async, event-scheduler modal-synth.scheduler, events goog.events, modal-synth.keyboard-control modal-synth.keyboard-control, modal-synth.channel-dom modal-synth.channel-dom, modal-synth.fader modal-synth.fader, modal-synth.channel modal-synth.channel, modal-synth.scheduler modal-synth.scheduler, channel modal-synth.channel, dommy.core dommy.core, fader modal-synth.fader, goog.events goog.events, modal-synth.spectro-vis modal-synth.spectro-vis}, :uses {timeout cljs.core.async, remove! dommy.core, <! cljs.core.async, set-style! dommy.core, set-class! dommy.core, close! cljs.core.async, set-attr! dommy.core, attr dommy.core, chan cljs.core.async, append! dommy.core, >! cljs.core.async, listen modal-synth.utils, alts! cljs.core.async, put! cljs.core.async, create-element dommy.core}, :defs {smooth-transition {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 51, :column 7, :end-line 51, :end-column 24, :arglists (quote ([audio-fader move-to start-time end-time]))}, :name modal-synth.cycles/smooth-transition, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 24, :method-params ([audio-fader move-to start-time end-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 4, :fn-var true, :arglists (quote ([audio-fader move-to start-time end-time]))}, activate-node! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 47, :column 7, :end-line 47, :end-column 21, :arglists (quote ([{:keys [element]}]))}, :name modal-synth.cycles/activate-node!, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 21, :method-params ([p__37178]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [element]}]))}, make-increment-element {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 110, :column 7, :end-line 110, :end-column 29, :arglists (quote ([nodes node-div audio-fader cycle-fader]))}, :name modal-synth.cycles/make-increment-element, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 29, :method-params ([nodes node-div audio-fader cycle-fader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 4, :fn-var true, :arglists (quote ([nodes node-div audio-fader cycle-fader]))}, remove-node! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 104, :column 7, :end-line 104, :end-column 19, :arglists (quote ([nodes]))}, :name modal-synth.cycles/remove-node!, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 19, :method-params ([nodes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([nodes]))}, create {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 158, :column 7, :end-line 158, :end-column 13, :arglists (quote ([topleft n audio-fader cycle-fader drag-and-drop-cycle scheduler & {:keys [freq], :or {freq 0.5}}])), :top-fn {:variadic true, :max-fixed-arity 6, :method-params [(topleft n audio-fader cycle-fader drag-and-drop-cycle scheduler {:keys [freq], :or {freq 0.5}})], :arglists ([topleft n audio-fader cycle-fader drag-and-drop-cycle scheduler & {:keys [freq], :or {freq 0.5}}]), :arglists-meta (nil)}}, :name modal-synth.cycles/create, :variadic true, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 6, :method-params [(topleft n audio-fader cycle-fader drag-and-drop-cycle scheduler {:keys [freq], :or {freq 0.5}})], :arglists ([topleft n audio-fader cycle-fader drag-and-drop-cycle scheduler & {:keys [freq], :or {freq 0.5}}]), :arglists-meta (nil)}, :method-params [(topleft n audio-fader cycle-fader drag-and-drop-cycle scheduler {:keys [freq], :or {freq 0.5}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 6, :fn-var true, :arglists ([topleft n audio-fader cycle-fader drag-and-drop-cycle scheduler & {:keys [freq], :or {freq 0.5}}])}, make-node {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 17, :column 7, :end-line 17, :end-column 16, :arglists (quote ([audio-fader cycle-fader]))}, :name modal-synth.cycles/make-node, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 16, :method-params ([audio-fader cycle-fader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([audio-fader cycle-fader]))}, deactivate-node! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 43, :column 7, :end-line 43, :end-column 23, :arglists (quote ([{:keys [element]}]))}, :name modal-synth.cycles/deactivate-node!, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 23, :method-params ([p__37173]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [element]}]))}, make-decrement-element {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 138, :column 7, :end-line 138, :end-column 29, :arglists (quote ([nodes]))}, :name modal-synth.cycles/make-decrement-element, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 29, :method-params ([nodes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([nodes]))}, make-ticker {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 66, :column 7, :end-line 66, :end-column 18, :arglists (quote ([scheduler nodes audio-fader freq smooth]))}, :name modal-synth.cycles/make-ticker, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 18, :method-params ([scheduler nodes audio-fader freq smooth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 5, :fn-var true, :arglists (quote ([scheduler nodes audio-fader freq smooth]))}, add-node! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :line 93, :column 7, :end-line 93, :end-column 16, :arglists (quote ([cycle- audio-fader cycle-fader]))}, :name modal-synth.cycles/add-node!, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/cycles.cljs", :end-column 16, :method-params ([cycle- audio-fader cycle-fader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cycle- audio-fader cycle-fader]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:smooth :freq :cycle-fader :mousedown-func :element :else :top :box :background-color :width :recur :state :tick! :node-div :div :mousemove-func :draggable :nodes :mouseup-func :onmousedown :display :position :border :audio-fader :visibility :height :left}, :order [:div :state :border :box :visibility :mousedown-func :mouseup-func :mousemove-func :element :background-color :nodes :node-div :top :left :display :position :onmousedown :height :width :freq :draggable :recur :audio-fader :cycle-fader :else :tick! :smooth]}, :doc nil}