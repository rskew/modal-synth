{:rename-macros {}, :renames {}, :use-macros {sel1 dommy.core, go cljs.core.async.macros, alt! cljs.core.async.macros}, :excludes #{}, :name modal-synth.fader, :imports nil, :requires {modal-synth.utils modal-synth.utils, dom goog.dom, goog.dom goog.dom, events goog.events, goog.events goog.events, cljs.core.async cljs.core.async, dommy dommy.core, dommy.core dommy.core}, :uses {<! cljs.core.async, set-style! dommy.core, set-class! dommy.core, close! cljs.core.async, set-attr! dommy.core, chan cljs.core.async, append! dommy.core, >! cljs.core.async, listen modal-synth.utils, alts! cljs.core.async, put! cljs.core.async, create-element dommy.core}, :defs {draw {:name modal-synth.fader/draw, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 13, :column 1, :end-line 13, :end-column 15, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 13, :column 11, :end-line 13, :end-column 15}}, bandpass-min-bandwidth {:name modal-synth.fader/bandpass-min-bandwidth, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 10, :column 1, :end-line 10, :end-column 28, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 10, :column 6, :end-line 10, :end-column 28}}, mouse-control! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 73, :column 7, :end-line 73, :end-column 21, :arglists (quote ([element state & {:keys [mousedown-func mouseup-func mousemove-func]}])), :doc "Handler for mouse events relating to an element", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(element state {:keys [mousedown-func mouseup-func mousemove-func]})], :arglists ([element state & {:keys [mousedown-func mouseup-func mousemove-func]}]), :arglists-meta (nil)}}, :name modal-synth.fader/mouse-control!, :variadic true, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(element state {:keys [mousedown-func mouseup-func mousemove-func]})], :arglists ([element state & {:keys [mousedown-func mouseup-func mousemove-func]}]), :arglists-meta (nil)}, :method-params [(element state {:keys [mousedown-func mouseup-func mousemove-func]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists ([element state & {:keys [mousedown-func mouseup-func mousemove-func]}]), :doc "Handler for mouse events relating to an element"}, init! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 104, :column 7, :end-line 104, :end-column 12, :arglists (quote ([fader])), :doc "re-draw the faders whenever the state is updated,\n  by mouse or by automation"}, :name modal-synth.fader/init!, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :end-column 12, :method-params ([fader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fader])), :doc "re-draw the faders whenever the state is updated,\n  by mouse or by automation"}, make-drag-scaler {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 55, :column 7, :end-line 55, :end-column 23, :arglists (quote ([state click-event])), :doc "Make closure to calculate the amount the fader should move\n  due to the change in mouse pos"}, :name modal-synth.fader/make-drag-scaler, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :end-column 23, :method-params ([state click-event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state click-event])), :doc "Make closure to calculate the amount the fader should move\n  due to the change in mouse pos"}, create {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 133, :column 7, :end-line 133, :end-column 13, :arglists (quote ([fader-state fader-type]))}, :name modal-synth.fader/create, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :end-column 13, :method-params ([fader-state fader-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fader-state fader-type]))}, draw-standard {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 16, :column 7, :end-line 16, :end-column 20, :arglists (quote ([fader]))}, :name modal-synth.fader/draw-standard, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :end-column 20, :method-params ([fader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fader]))}, create-bandpass {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 188, :column 7, :end-line 188, :end-column 22, :arglists (quote ([state-highpass state-lowpass]))}, :name modal-synth.fader/create-bandpass, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :end-column 22, :method-params ([state-highpass state-lowpass]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state-highpass state-lowpass]))}, init-bandpass! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 153, :column 7, :end-line 153, :end-column 21, :arglists (quote ([bp])), :doc "re-draw the faders whenever the state is updated,\n  by mouse or by automation"}, :name modal-synth.fader/init-bandpass!, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :end-column 21, :method-params ([bp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bp])), :doc "re-draw the faders whenever the state is updated,\n  by mouse or by automation"}, init-cycle! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :line 120, :column 7, :end-line 120, :end-column 18, :arglists (quote ([fader]))}, :name modal-synth.fader/init-cycle!, :variadic false, :file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/fader.cljs", :end-column 18, :method-params ([fader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fader]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:chan :draw-watcher :mousedown-func :Delay :state-highpass :else :handle-lowpass :default :bar :box :background-color :width :cursor :recur :type :chan-lowpass :state :chan-highpass :handle-highpass :ondragover :div :state-lowpass :mousemove-func :mouseup-func :handle :hierarchy :visibility :Bandpass :left :Gain}, :order [:hierarchy :type :default :box :width :state :bar :handle :left :Gain :Delay :Bandpass :handle-highpass :state-highpass :state-lowpass :handle-lowpass :else :mousedown-func :mouseup-func :mousemove-func :recur :cursor :draw-watcher :background-color :visibility :div :chan :ondragover :chan-highpass :chan-lowpass]}, :doc nil}