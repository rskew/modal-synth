{:rename-macros {}, :renames {}, :use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros}, :excludes #{}, :name modal-synth.utils, :imports nil, :requires {dom goog.dom, goog.dom goog.dom, events goog.events, goog.events goog.events, dommy dommy.core, dommy.core dommy.core, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, set-style! dommy.core, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, alts! cljs.core.async, put! cljs.core.async}, :defs {listen {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/utils.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([el type]))}, :name modal-synth.utils/listen, :variadic false, :file "src/modal_synth/utils.cljs", :end-column 13, :method-params ([el type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el type]))}, set-html! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/utils.cljs", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([html-object & html])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(html-object html)], :arglists ([html-object & html]), :arglists-meta (nil)}}, :name modal-synth.utils/set-html!, :variadic true, :file "src/modal_synth/utils.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(html-object html)], :arglists ([html-object & html]), :arglists-meta (nil)}, :method-params [(html-object html)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists ([html-object & html])}, smooth-array! {:protocol-inline nil, :meta {:file "/mnt/windows/RoStuff/documents/apps/modal-synth/src/modal_synth/utils.cljs", :line 21, :column 7, :end-line 21, :end-column 20, :arglists (quote ([array uptake gain]))}, :name modal-synth.utils/smooth-array!, :variadic false, :file "src/modal_synth/utils.cljs", :end-column 20, :method-params ([array uptake gain]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([array uptake gain]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dommy dommy.core, dommy.core dommy.core}, :doc nil}